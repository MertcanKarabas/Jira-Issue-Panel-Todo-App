/** @jsx jsx */
import { css, jsx } from '@emotion/react';
import { getBooleanFF } from '@atlaskit/platform-feature-flags';
import { B200, B300, B400, B50, N10, N100, N20, N30, N40, N70, N80, N900, R300 } from '@atlaskit/theme/colors';
import { fontFamily } from './constants';
const baseStyles = css({
  display: 'grid',
  gridAutoColumns: '1fr',
  gridAutoRows: 'min-content',
  color: `var(--ds-text, ${N900})`,
  cursor: 'default',
  fontFamily: `var(--ds-font-family-sans, ${fontFamily})`
});
const textLabelLayoutStyles = css({
  gap: `${"var(--ds-space-0, 0px)"} ${"var(--ds-space-050, 4px)"}`,
  gridTemplateColumns: 'min-content auto'
});
const disabledStyles = css({
  color: `var(--ds-text-disabled, ${N80})`,
  cursor: 'not-allowed'
});
const labelStyles = css({
  /**
   * Background
   */
  '--local-background': `var(--ds-background-input, ${N10})`,
  '--local-background-active': `var(--ds-background-input-pressed, ${B50})`,
  '--local-background-checked': `var(--ds-background-selected-bold, ${B400})`,
  '--local-background-checked-hover': `var(--ds-background-selected-bold-hovered, ${B300})`,
  '--local-background-disabled': `var(--ds-background-disabled, ${N20})`,
  '--local-background-hover': `var(--ds-background-input-hovered, ${N30})`,
  /**
   * Border
   */
  '--local-border': getBooleanFF('platform.design-system-team.update-border-radio-checkbox_7askv') ? `var(--ds-border-bold, ${N100})` : `var(--ds-border-input, ${N40})`,
  '--local-border-active': `var(--ds-border, ${B50})`,
  '--local-border-checked': `var(--ds-background-selected-bold, ${B400})`,
  '--local-border-checked-hover': `var(--ds-background-selected-bold-hovered, ${B300})`,
  '--local-border-checked-invalid': `var(--ds-border-danger, ${R300})`,
  '--local-border-disabled': `var(--ds-background-disabled, ${N20})`,
  '--local-border-focus': `var(--ds-border-focused, ${B200})`,
  '--local-border-hover': getBooleanFF('platform.design-system-team.update-border-radio-checkbox_7askv') ? `var(--ds-border-bold, ${N100})` : `var(--ds-border-input, ${N40})`,
  '--local-border-invalid': `var(--ds-border-danger, ${R300})`,
  /**
   * Tick
   */
  '--local-tick-active': `var(--ds-icon-inverse, ${B400})`,
  '--local-tick-checked': `var(--ds-icon-inverse, ${N10})`,
  '--local-tick-disabled': `var(--ds-icon-disabled, ${N70})`,
  '--local-tick-rest': 'transparent'
});
export default function Label({
  children,
  isDisabled,
  testId,
  label,
  id
}) {
  return jsx("label", {
    css: [baseStyles, label && textLabelLayoutStyles, isDisabled && disabledStyles, labelStyles],
    "data-testid": testId,
    "data-disabled": isDisabled || undefined,
    id: id
  }, children);
}