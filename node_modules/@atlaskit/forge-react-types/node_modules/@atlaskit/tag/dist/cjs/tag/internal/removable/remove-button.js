"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _close = _interopRequireDefault(require("@atlaskit/icon/glyph/editor/close"));
var _constants = require("../../../constants");
/** @jsx jsx */

var baseStyles = (0, _react.css)({
  display: 'flex',
  height: '16px',
  margin: "var(--ds-space-0, 0px)",
  padding: "var(--ds-space-0, 0px)",
  position: 'absolute',
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
  right: 0,
  alignItems: 'center',
  justifyContent: 'center',
  alignSelf: 'center',
  appearance: 'none',
  backgroundColor: 'transparent',
  border: 'none',
  borderRadius: "var(".concat(_constants.cssVar.borderRadius, ")"),
  // Once legacy theming is dropped, this can be changed to 'inherit'
  color: "var(".concat(_constants.cssVar.color.removeButton.default, ")"),
  cursor: 'pointer',
  pointerEvents: 'auto',
  '&::-moz-focus-inner': {
    margin: "var(--ds-space-0, 0px)",
    padding: "var(--ds-space-0, 0px)",
    border: 0
  },
  ':hover': {
    // Once legacy theming is dropped, this can be changed to 'cssVar.color.text.default'
    color: "var(".concat(_constants.cssVar.color.removeButton.hover, ")")
  }
});
var focusRingStyles = (0, _react.css)({
  '&:focus': {
    boxShadow: "0 0 0 2px var(".concat(_constants.cssVar.color.focusRing, ") inset"),
    outline: 'none'
  }
});
var RemoveButton = function RemoveButton(_ref) {
  var ariaLabel = _ref['aria-label'],
    onClick = _ref.onClick,
    onFocus = _ref.onFocus,
    onBlur = _ref.onBlur,
    onKeyPress = _ref.onKeyPress,
    onMouseOver = _ref.onMouseOver,
    onMouseOut = _ref.onMouseOut,
    testId = _ref.testId;
  return (0, _react.jsx)("button", {
    css: [baseStyles, focusRingStyles],
    tabIndex: 0,
    "aria-label": ariaLabel,
    onClick: onClick,
    onFocus: onFocus,
    onBlur: onBlur,
    onKeyPress: onKeyPress,
    onMouseOver: onMouseOver,
    onMouseOut: onMouseOut,
    type: "button",
    "data-testid": testId
  }, (0, _react.jsx)(_close.default, {
    label: "close tag",
    size: "small"
  }));
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var _default = exports.default = RemoveButton;