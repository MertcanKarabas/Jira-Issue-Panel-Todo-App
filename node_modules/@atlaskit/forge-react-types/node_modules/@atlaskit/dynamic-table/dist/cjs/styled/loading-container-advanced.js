"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpinnerContainer = exports.SpinnerBackdrop = exports.Container = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _excluded = ["children", "testId"];
/* eslint-disable @repo/internal/react/require-jsdoc */
/** @jsx jsx */
var containerStyles = (0, _react2.css)({
  marginBottom: "var(--ds-space-300, 24px)",
  position: 'relative'
});
var Container = exports.Container = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var children = props.children,
    testId = props.testId,
    rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  return (
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    (0, _react2.jsx)("div", (0, _extends2.default)({
      css: containerStyles
    }, rest, {
      "data-testid": testId,
      ref: ref
    }), children)
  );
});
var spinnerBackdropStyles = (0, _react2.css)({
  display: 'flex',
  position: 'absolute',
  inset: 0,
  alignItems: 'center',
  justifyContent: 'center',
  pointerEvents: 'none'
});
var SpinnerBackdrop = exports.SpinnerBackdrop = function SpinnerBackdrop(_ref) {
  var children = _ref.children,
    testId = _ref.testId;
  return (0, _react2.jsx)("div", {
    css: spinnerBackdropStyles,
    "data-testid": testId && "".concat(testId, "--spinner-backdrop")
  }, children);
};
var spinnerContainerStyles = (0, _react2.css)({
  position: 'relative',
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
  top: 0
});
var SpinnerContainer = exports.SpinnerContainer = /*#__PURE__*/(0, _react.forwardRef)(function (_ref2, ref) {
  var children = _ref2.children;
  return (0, _react2.jsx)("div", {
    css: spinnerContainerStyles,
    ref: ref
  }, children);
});