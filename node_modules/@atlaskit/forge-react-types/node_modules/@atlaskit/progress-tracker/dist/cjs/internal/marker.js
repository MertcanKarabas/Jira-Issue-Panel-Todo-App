"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _constants = require("./constants");
/* eslint-disable @atlaskit/design-system/no-nested-styles */
/** @jsx jsx */

var progressMarkerStyles = (0, _react.css)({
  width: _constants.PROGRESS_BAR_HEIGHT,
  height: _constants.PROGRESS_BAR_HEIGHT,
  position: 'absolute',
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
  left: '50%',
  backgroundColor: "var(".concat(_constants.varBackgroundColor, ")"),
  borderRadius: _constants.PROGRESS_BAR_HEIGHT,
  transform: "translate(-50%, calc(-1 * ".concat(_constants.LABEL_TOP_SPACING, "))"),
  transition: "opacity var(".concat(_constants.varTransitionSpeed, ") var(").concat(_constants.varTransitionEasing, "), background-color var(").concat(_constants.varTransitionSpeed, ") var(").concat(_constants.varTransitionEasing, ")"),
  transitionDelay: "var(".concat(_constants.varTransitionDelay, ")"),
  '&.fade-appear': {
    opacity: 0.01
  },
  '&.fade-appear.fade-appear-active': {
    opacity: 1
  },
  '&.fade-enter': {
    backgroundColor: "var(".concat(_constants.varMarkerColor, ")")
  },
  '&.fade-enter.fade-enter-active': {
    backgroundColor: "var(".concat(_constants.varBackgroundColor, ")")
  }
});

/**
 * __Progress marker__
 *
 * Similar to `@atlaskit/progress-indicator`, a small visual circle marker
 */
var ProgressMarker = function ProgressMarker(_ref) {
  var testId = _ref.testId;
  return (
    // too many props that would go in UNSAFE_style + css transition prop having issues

    (0, _react.jsx)("div", {
      "data-testid": testId,
      css: progressMarkerStyles
    })
  );
};
var _default = exports.default = ProgressMarker;